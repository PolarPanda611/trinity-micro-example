basePath: /
definitions:
  dto.ListUserResponse:
    properties:
      current:
        example: 3
        type: integer
      data:
        items:
          $ref: '#/definitions/dto.UserInfoDTO'
        type: array
      page_size:
        example: 20
        type: integer
      total:
        example: 120
        type: integer
      total_page:
        example: 6
        type: integer
    type: object
  dto.UserInfoDTO:
    properties:
      age:
        example: 18
        type: integer
      email:
        example: daniel@trinity.com
        type: string
      gender:
        enum:
        - male
        - female
        example: male
        type: string
      id:
        example: "1479429646645936128"
        type: string
      username:
        example: Daniel
        type: string
    type: object
  dto.UserInfoResponse:
    properties:
      age:
        example: 18
        type: integer
      email:
        example: daniel@trinity.com
        type: string
      gender:
        enum:
        - male
        - female
        example: male
        type: string
      id:
        example: "1479429646645936128"
        type: string
      username:
        example: Daniel
        type: string
    type: object
  httpx.ErrorInfo:
    properties:
      code:
        example: 400001
        type: integer
      details:
        example:
        - error detail1
        - error detail2
        items:
          type: string
        type: array
      message:
        example: ErrInvalidRequest
        type: string
    type: object
  httpx.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/httpx.ErrorInfo'
      status:
        example: 400
        type: integer
      trace_id:
        example: 1-trace-it
        type: string
    type: object
  httpx.SuccessResponse:
    properties:
      result: {}
      status:
        example: 200
        type: integer
      trace_id:
        example: 1-trace-it
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for trinity-micro
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: trinity-micro Example API
  version: "1.0"
paths:
  /example-api/v1/{tenant}/users:
    get:
      consumes:
      - application/json
      description: list user information
      parameters:
      - description: current user id
        in: header
        name: current_user_id
        type: integer
      - description: tenant id
        in: path
        name: tenant
        required: true
        type: string
      - description: page size
        in: query
        maximum: 500
        minimum: 1
        name: pageSize
        required: true
        type: integer
      - description: page number
        in: query
        minimum: 1
        name: current
        required: true
        type: integer
      - description: username ilike
        in: query
        maxLength: 100
        minLength: 1
        name: username__ilike
        type: string
      - description: username ilike
        in: query
        maxLength: 100
        minLength: 1
        name: age
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            allOf:
            - $ref: '#/definitions/httpx.SuccessResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.ListUserResponse'
              type: object
        "400":
          description: error response
          schema:
            $ref: '#/definitions/httpx.ErrorResponse'
        "500":
          description: error response
          schema:
            $ref: '#/definitions/httpx.ErrorResponse'
      summary: list user
      tags:
      - User
    post:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: tenant id
        in: path
        name: tenant
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: success response
          schema:
            allOf:
            - $ref: '#/definitions/httpx.SuccessResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.UserInfoResponse'
              type: object
        "400":
          description: error response
          schema:
            $ref: '#/definitions/httpx.ErrorResponse'
        "500":
          description: error response
          schema:
            $ref: '#/definitions/httpx.ErrorResponse'
      summary: Get Single user information
      tags:
      - User
  /example-api/v1/{tenant}/users/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: tenant id
        in: path
        name: tenant
        required: true
        type: string
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            allOf:
            - $ref: '#/definitions/httpx.SuccessResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.UserInfoResponse'
              type: object
        "400":
          description: error response
          schema:
            $ref: '#/definitions/httpx.ErrorResponse'
        "500":
          description: error response
          schema:
            $ref: '#/definitions/httpx.ErrorResponse'
      summary: Get Single user information
      tags:
      - User
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
